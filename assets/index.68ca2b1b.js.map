{"version":3,"file":"index.68ca2b1b.js","sources":["../../vite/modulepreload-polyfill","../../main.js"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","import './style.css';\n\nimport 'ol/ol.css';\nimport {Map, View} from 'ol';\nimport TileLayer from 'ol/layer/Tile';\nimport {OSM} from 'ol/source';\nimport WMTS, {optionsFromCapabilities} from 'ol/source/WMTS';\nimport WMTSCapabilities from 'ol/format/WMTSCapabilities';\n\n// import VectorImageLayer from 'ol/layer/VectorImage';\n// import VectorLayer from 'ol/layer/Vector';\n// import VectorSource from 'ol/source/Vector';\n\nimport olms from 'ol-mapbox-style';\n\n// const url =\n//   'https://sampleserver1.arcgisonline.com/ArcGIS/rest/services/' +\n//   'Specialty/ESRI_StateCityHighway_USA/MapServer';\n\n//const url = 'https://tiles.arcgis.com/tiles/j75S08un0OPoEcHD/arcgis/rest/services/LSIB9_polygons/MapServer';\n//const url = 'https://tiles.arcgis.com/tiles/j75S08un0OPoEcHD/arcgis/rest/services/BASE_basemap_tiles/MapServer';\n\n//const endpoint = 'https://tiles.arcgis.com/tiles/j75S08un0OPoEcHD/arcgis/rest/services/LSIB9_polygons/MapServer/WMTS/1.0.0/WMTSCapabilities.xml';\n\n\n//z10\nconst endpoint = 'https://tiles.arcgis.com/tiles/j75S08un0OPoEcHD/arcgis/rest/services/BASE_basemap_tiles_z10/MapServer/WMTS/1.0.0/WMTSCapabilities.xml';\n\nfunction testWMTS() {\n  console.log(\"aynonomous function\");\n  \n  var parser = new WMTSCapabilities();\n\n  return fetch(endpoint)\n      .then(function (response) { return response.text(); })\n      .then(function (text) {\n      var result = parser.read(text);\n      console.log(\"parse result\");\n      console.log(result);\n      var source = optionsFromCapabilities(result, {\n          layer: 'BASE_basemap_tiles_z10',\n          matrixSet: 'default',\n          requestEncoding: 'REST',\n      });\n      console.log(\"print source\");\n      console.log(source);\n      var layer = new TileLayer({\n          source: new WMTS(source)\n      });\n      const layers = [\n        // new TileLayer({\n        //   source: new OSM(),\n        // }),\n        layer,\n      ];\n      \n      const map = new Map({\n        //layers: layers,\n        target: 'map',\n        view: new View({\n          center: [-10997148, 4569099],\n          zoom: 4,\n        }),\n      });\n\n\n      // https://basemaps.arcgis.com/arcgis/rest/services/World_Basemap_v2/VectorTileServer\n      const basemapId = \"World_Basemap_v2\";\n\n      //const basemapURL = \"https://basemaps-api.arcgis.com/arcgis/rest/services/styles/\" + basemapId + \"?type=style&token=\" + apiKey;\n\n      //const basemapURL = 'https://state-hiu.maps.arcgis.com/sharing/rest/content/items/ce3dd6a66d7446aabd2bb8dfd3fbef8f/resources/styles/root.json?f=pjson';\n      const basemapURL = 'https://state-hiu.maps.arcgis.com/sharing/rest/content/items/4e0fe6f6569545aa9542dbc5aada9f17/resources/styles/root.json?f=pjson';\n\n      olms(map, basemapURL).then(map => {\n        map.addLayer(layer);\n      });\n\n      // console.log(\"print layers\");\n      // console.log(map.getLayers());\n\n\n  });\n\n};\n\ntestWMTS();\n"],"names":[],"mappings":"mFAAA,KAAM,GAAI,UAAoB,CAC1B,KAAM,GAAU,SAAS,cAAc,QAAQ,QAC/C,GAAI,GAAW,EAAQ,UAAY,EAAQ,SAAS,iBAChD,OAEJ,SAAW,KAAQ,UAAS,iBAAiB,6BACzC,EAAe,GAEnB,GAAI,kBAAiB,AAAC,GAAc,CAChC,SAAW,KAAY,GACnB,GAAI,EAAS,OAAS,YAGtB,SAAW,KAAQ,GAAS,WACxB,AAAI,EAAK,UAAY,QAAU,EAAK,MAAQ,iBACxC,EAAe,KAG5B,QAAQ,SAAU,CAAE,UAAW,GAAM,QAAS,KACjD,WAAsB,EAAQ,CAC1B,KAAM,GAAY,GAClB,MAAI,GAAO,WACP,GAAU,UAAY,EAAO,WAC7B,EAAO,gBACP,GAAU,eAAiB,EAAO,gBACtC,AAAI,EAAO,cAAgB,kBACvB,EAAU,YAAc,UACvB,AAAI,EAAO,cAAgB,YAC5B,EAAU,YAAc,OAExB,EAAU,YAAc,cACrB,EAEX,WAAwB,EAAM,CAC1B,GAAI,EAAK,GAEL,OACJ,EAAK,GAAK,GAEV,KAAM,GAAY,EAAa,GAC/B,MAAM,EAAK,KAAM,KAEvB,AAAoB,IChBtB,KAAM,GAAW,wIAEjB,YAAoB,CAClB,QAAQ,IAAI,uBAEZ,GAAI,GAAS,GAAI,GAEjB,MAAO,OAAM,GACR,KAAK,SAAU,EAAU,CAAE,MAAO,GAAS,SAC3C,KAAK,SAAU,EAAM,CACtB,GAAI,GAAS,EAAO,KAAK,GACzB,QAAQ,IAAI,gBACZ,QAAQ,IAAI,GACZ,GAAI,GAAS,EAAwB,EAAQ,CACzC,MAAO,yBACP,UAAW,UACX,gBAAiB,SAErB,QAAQ,IAAI,gBACZ,QAAQ,IAAI,GACZ,GAAI,GAAQ,GAAI,GAAU,CACtB,OAAQ,GAAI,GAAK,KASrB,KAAM,GAAM,GAAI,GAAI,CAElB,OAAQ,MACR,KAAM,GAAI,GAAK,CACb,OAAQ,CAAC,UAAW,SACpB,KAAM,MAaV,EAAK,EAFc,oIAEG,KAAK,GAAO,CAChC,EAAI,SAAS,OAWrB"}